<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.zoujidi</groupId>
  <artifactId>SSM_OA</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>SSM_OA Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <!-- 项目属性 -->
  <properties>
  	<!-- main version setting -->
  		<spring.version>4.2.1.RELEASE</spring.version>
  		<log4j.version>1.2.17</log4j.version>
  		<mybatis.version>3.3.1</mybatis.version>
  </properties>
  
  <dependencies>
    <!-- TEST begin -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	<!-- 引入servlet api  scope：provide-->
		<dependency>
        	<groupId>javax.servlet</groupId>
        	<artifactId>servlet-api</artifactId>
        	<version>2.5</version>
			<scope>provided</scope>
    	</dependency>
	<!-- 引入jstl包 -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
	<!-- 引入jsp编译包 -->
		<dependency>
    		<groupId>javax.servlet.jsp</groupId>
    		<artifactId>javax.servlet.jsp-api</artifactId>
    		<version>2.2.1</version>
    		<scope>provided</scope>
		</dependency>
	<!-- 引入log4j -->
		<dependency>
        	<groupId>log4j</groupId>
        	<artifactId>log4j</artifactId>
        	<version>${log4j.version}</version>
    	</dependency>
	<!-- 以上为基础包 -->
	
	<!-- spring springmvc mybatis -->
	<!-- spring 和 springmvc相关的构建  jar  -->
	
	<!-- 引入spring-context包后 就引入了几个核心包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
	<!-- 引入spring-jdbc ： 引入tx事务管理包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
	<!-- springmvc 相关包   经验：引入webmvc 即依赖了 web包-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
	<!-- springmvc需要用json的转换包jackson -->
		<dependency>
   	 		<groupId>com.fasterxml.jackson.core</groupId>
    		<artifactId>jackson-core</artifactId>
    		<version>2.5.4</version>
		</dependency>
		<dependency>
   	 		<groupId>com.fasterxml.jackson.core</groupId>
    		<artifactId>jackson-annotations</artifactId>
    		<version>2.5.4</version>
		</dependency>
		<dependency>
   	 		<groupId>com.fasterxml.jackson.core</groupId>
    		<artifactId>jackson-databind</artifactId>
    		<version>2.12.6.1</version>
		</dependency>
		
	<!-- JSR303 后台校验  hibernate validator -->
		<dependency>
   	 		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-validator</artifactId>
    		<version>5.1.1.Final</version>
		</dependency>	
	<!-- 上传文件相关的jar --> 
		<dependency>
   	 		<groupId>commons-io</groupId>
    		<artifactId>commons-io</artifactId>
    		<version>2.4</version>
		</dependency>
	 	<dependency>
   	 		<groupId>commons-fileupload</groupId>
    		<artifactId>commons-fileupload</artifactId>
    		<version>1.3.1</version>
		</dependency>
	<!-- 字符串工具包 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
	<!-- 跟加密算法相关的Codec -->
		<dependency>
    		<groupId>commons-codec</groupId>
    		<artifactId>commons-codec</artifactId>
    		<version>1.9</version>
		</dependency>
	
	<!-- orm或者jdbc组件需要的jar包   mybatis -->
	<!-- mysql数据库驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.47</version>
			<scope>runtime</scope>
		</dependency>
		
	<!-- 阿里的连接druid连接池  类似于c3p0 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.15</version>
		</dependency>
	
	<!-- 引入mybatis需要的jar包 --><!-- 这里会出现一个jar包冲突的问题 ：activiti引擎依赖mybatis3.2.5 而我引入了较新的3.3.1产生冲突 -->
		<!-- <dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency> -->
	<!-- spring-mybatis集成jar包 -->	
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.4</version>
		</dependency>
	<!-- mybatis分页查询插件 -->
		<dependency>
   	 		<groupId>com.github.pagehelper</groupId>
   			<artifactId>pagehelper</artifactId>
    		<version>4.2.1</version>
		</dependency>
	
	<!-- jedis -->
		<dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.5.1</version>
        </dependency>
        
    <!-- Activiti 的依赖 -->
		<dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-engine</artifactId>
            <version>5.18.0</version>
        </dependency>
        
    <!-- Activiti 集成spring的依赖 -->
		<dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring</artifactId>
            <version>5.18.0</version>
        </dependency>
  </dependencies>
  <build>
    <finalName>SSM_OA</finalName>
    <plugins>
    	<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
    	</plugin>
    </plugins>
	  <resources>
		  <resource>
			  <directory>src/main/java</directory><!--所在的目录-->
			  <includes><!--包括目录下的.properties,.xml文件都会扫描到-->
				  <include>**/*.properties</include>
				  <include>**/*.xml</include>
			  </includes>
			  <filtering>false</filtering>
		  </resource>
	  </resources>

  </build>
</project>
